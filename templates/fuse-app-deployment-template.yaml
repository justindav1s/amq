apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: spring-boot-camel-amq-deployment
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQP_HOST
            value: ${AMQP_HOST}
          - name: AMQP_CONNECTION_STRING
            value: ${AMQP_CONNECTION_STRING}
          - name: AMQP_USERNAME
            value: ${AMQP_USERNAME}
          - name: AMQP_PASSWORD
            value: ${AMQP_PASSWORD}
          image: "${APP_IMAGE}:${APP_IMAGE_TAG}"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APP_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_IMAGE}
        from:
          kind: ImageStreamTag
          name: "${APP_IMAGE}:${APP_IMAGE_TAG}"
          namespace: ${APP_IMAGE_NS}
      type: ImageChange

parameters:
- name: APP_NAME
  displayName: Application Name
  description: Name of the application label that should be used in all resources.
  required: true
- name: AMQP_HOST
  displayName: Address where amq6 amqp endpoint is listening
  required: false
- name: AMQP_CONNECTION_STRING
  displayName: Use this as the broker address if something more complicated is required
  required: false
- name: AMQP_USERNAME
  displayName: amq6 username
  required: true
- name: AMQP_PASSWORD
  displayName: amq6 password
  required: true
- name: APP_IMAGE
  displayName: Name of Fuse image
  value: "fuse7-java-openshift"
  required: true
- name: APP_IMAGE_TAG
  displayName: Tag of Fuse image
  value: "1.2"
  required: true
- name: APP_IMAGE_NS
  displayName: Tag of Fuse image namespace
  value: "openshift"
  required: true
